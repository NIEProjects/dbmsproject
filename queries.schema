PRAGMA foreign_keys = 1; 

CREATE TABLE States(
    state_name TEXT PRIMARY KEY
    );

CREATE TABLE Places(
    city_name  TEXT PRIMARY KEY,
    state_name TEXT NOT NULL,
    FOREIGN KEY(state_name) REFERENCES States(state_name) 
    );
    
CREATE TABLE UserProfile(
    user_id int(20) PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    first_name TEXT NOT NULL,
    last_name TEXT,
    date_of_birth date NOT NULL,
    city TEXT,
    state TEXT,
    last_logged_in NUMERIC,
    FOREIGN KEY(city) REFERENCES Places(city_name),
    FOREIGN KEY(state) REFERENCES States(state_name)
    );
    
CREATE TABLE Credentials(
    user_id int(20),
    username TEXT,
    md5_passwd TEXT NOT NULL,
    FOREIGN KEY(username) REFERENCES UserProfile(username),
    FOREIGN KEY(user_id) REFERENCES UserProfile(user_id)
    );

CREATE TABLE Songs(
    song_id int(20) PRIMARY KEY,
    name TEXT NOT NULL,
    singer TEXT,
    film TEXT,
    genre TEXT,            
    rating int(3),
    url TEXT NOT NULL UNIQUE,    
    img_url TEXT default '/images/defaultsong.jpg'
    );
    
CREATE TABLE FavouriteGenres(
    user_id int(20),
    genre TEXT NOT NULL,
    FOREIGN KEY(user_id) REFERENCES UserProfile(user_id),
    PRIMARY KEY(user_id,genre)
);

CREATE TABLE Quotes(
    quote_url TEXT,
    personality TEXT,
    count NUMBER
);
    
CREATE TABLE SongTags(
    song_id int(20),
    tag TEXT,
    foreign key(song_id) REFERENCES Songs(song_id)
    );
 
CREATE TABLE LoggedInUsers(
    user_id int(20) PRIMARY KEY,
    token TEXT NOT NULL UNIQUE,
    FOREIGN KEY(user_id) REFERENCES UserProfile(user_id)
    );

CREATE VIEW ActiveUsers as
select user_id from UserProfile where
((strftime("%s","now")-strftime("%s",last_logged_in))/3600)<(24*7);

CREATE VIEW InactiveUsers as 
select user_id from UserProfile
EXCEPT
select user_id from ActiveUsers; 

CREATE TRIGGER updateLastLoggedIn
after insert on LoggedInUsers
for each row
begin
update UserProfile set last_logged_in=datetime("now","localtime")
where UserProfile.user_id=NEW.user_id;
end;

CREATE INDEX tag_i on SongTags (song_id);